;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name soccer.gamestate, :imports nil, :requires nil, :uses nil, :defs {draw {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/gamestate.cljs", :line 3, :column 7, :end-line 3, :end-column 11, :arglists (quote ([game]))}, :name soccer.gamestate/draw, :variadic false, :file "src-cljs/soccer/gamestate.cljs", :end-column 11, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game]))}, time-tick {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/gamestate.cljs", :line 7, :column 7, :end-line 7, :end-column 16, :arglists (quote ([game]))}, :name soccer.gamestate/time-tick, :variadic false, :file "src-cljs/soccer/gamestate.cljs", :end-column 16, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game]))}, enter {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/gamestate.cljs", :line 11, :column 7, :end-line 11, :end-column 12, :arglists (quote ([game state-kw]))}, :name soccer.gamestate/enter, :variadic false, :file "src-cljs/soccer/gamestate.cljs", :end-column 12, :method-params ([game state-kw]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 2, :fn-var true, :arglists (quote ([game state-kw]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:cur-state :enter :leave :draw :time-tick}, :order [:cur-state :draw :time-tick :enter :leave]}, :doc nil}