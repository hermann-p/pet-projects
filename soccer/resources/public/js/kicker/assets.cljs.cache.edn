;; Analyzed by ClojureScript 1.7.145
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name kicker.assets, :imports nil, :requires {hipo hipo.core, hipo.core hipo.core, cljs.core.async cljs.core.async, dommy dommy.core, dommy.core dommy.core, http cljs-http.client, cljs-http.client cljs-http.client}, :uses {<! cljs.core.async, take! cljs.core.async}, :defs {load-asset {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :line 72, :column 7, :end-line 72, :end-column 17, :arglists (quote ([{:keys [type-key id url]}]))}, :name kicker.assets/load-asset, :variadic false, :file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :end-column 17, :method-params ([p__14477]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [type-key id url]}]))}, asset-error! {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :line 33, :column 7, :end-line 33, :end-column 19, :arglists (quote ([type-key id]))}, :name kicker.assets/asset-error!, :variadic false, :file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :end-column 19, :method-params ([type-key id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([type-key id]))}, load-sound {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :line 57, :column 7, :end-line 57, :end-column 17, :arglists (quote ([id url]))}, :name kicker.assets/load-sound, :variadic false, :file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :end-column 17, :method-params ([id url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id url]))}, ready? {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :line 30, :column 7, :end-line 30, :end-column 13, :arglists (quote ([]))}, :name kicker.assets/ready?, :variadic false, :file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, percent-done {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :line 23, :column 7, :end-line 23, :end-column 19, :arglists (quote ([]))}, :name kicker.assets/percent-done, :variadic false, :file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, load {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :line 78, :column 7, :end-line 78, :end-column 11, :arglists (quote ([]))}, :name kicker.assets/load, :variadic false, :file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, request {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :line 37, :column 7, :end-line 37, :end-column 14, :arglists (quote ([type-key id url]))}, :name kicker.assets/request, :variadic false, :file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :end-column 14, :method-params ([type-key id url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 3, :fn-var true, :arglists (quote ([type-key id url]))}, play-sound {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :line 98, :column 7, :end-line 98, :end-column 17, :arglists (quote ([id]))}, :name kicker.assets/play-sound, :variadic false, :file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :end-column 17, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, get-asset {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :line 90, :column 7, :end-line 90, :end-column 16, :arglists (quote ([type-key id]))}, :name kicker.assets/get-asset, :variadic false, :file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :end-column 16, :method-params ([type-key id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 2, :fn-var true, :arglists (quote ([type-key id]))}, assets {:name kicker.assets/assets, :file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :line 12, :column 1, :end-line 12, :end-column 16, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :line 12, :column 10, :end-line 12, :end-column 16}}, request-all {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :line 83, :column 7, :end-line 83, :end-column 18, :arglists (quote ([reqmap]))}, :name kicker.assets/request-all, :variadic false, :file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :end-column 18, :method-params ([reqmap]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reqmap]))}, load-img {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :line 46, :column 7, :end-line 46, :end-column 15, :arglists (quote ([id url]))}, :name kicker.assets/load-img, :variadic false, :file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :end-column 15, :method-params ([id url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id url]))}, pixi {:name kicker.assets/pixi, :file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :line 10, :column 1, :end-line 10, :end-column 14, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :line 10, :column 10, :end-line 10, :end-column 14}}, mk-sprite {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :line 95, :column 7, :end-line 95, :end-column 16, :arglists (quote ([id]))}, :name kicker.assets/mk-sprite, :variadic false, :file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :end-column 16, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, count-loaded {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :line 18, :column 7, :end-line 18, :end-column 19, :arglists (quote ([]))}, :name kicker.assets/count-loaded, :variadic false, :file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, count-requested {:protocol-inline nil, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :line 14, :column 7, :end-line 14, :end-column 22, :arglists (quote ([]))}, :name kicker.assets/count-requested, :variadic false, :file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, url-list {:name kicker.assets/url-list, :file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :line 11, :column 1, :end-line 11, :end-column 18, :meta {:file "/home/hermann-p/workspace/pet-projects/soccer/src-cljs/soccer/assets.cljs", :line 11, :column 10, :end-line 11, :end-column 18}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, hipo hipo.core, hipo.core hipo.core, dommy dommy.core, dommy.core dommy.core}, :cljs.analyzer/constants {:seen #{:audio-ctx :ready :else :response-type map? :recur :snd :type-key reqmap :status :id :url :image :body :array-buffer :img :data}, :order [:img :snd :ready :type-key :id :url :data :audio-ctx :response-type :array-buffer :status :recur :body :else map? reqmap :image]}, :doc nil}